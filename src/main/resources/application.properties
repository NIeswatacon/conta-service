# Nome que o serviço usará para se registrar no Eureka
spring.application.name=CONTA

# O Railway fornecerá a porta para a aplicação rodar
server.port=${PORT}

# --- CONFIGURAÇÃO DO BANCO DE DADOS (Railway) ---
# O Railway injeta a URL de conexão completa nesta variável de ambiente
spring.datasource.url=${JDBC_DATABASE_URL}
# O Railway também injeta o usuário e a senha do banco de dados
spring.datasource.username=${JDBC_DATABASE_USER}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
# Garante que a estrutura da tabela seja atualizada se a entidade mudar
spring.jpa.hibernate.ddl-auto=update


# --- CONFIGURAÇÃO DO CLIENTE EUREKA (Railway) ---
# Diz ao Eureka para usar o endereço de rede que o Railway lhe der.
# Isso é crucial para a comunicação interna entre os serviços na nuvem.
eureka.instance.hostname=${RAILWAY_PRIVATE_IP:localhost}
# URL do seu Eureka Server. Você criará a variável EUREKA_URL no painel do Railway.
eureka.client.service-url.defaultZone=${EUREKA_URL}/eureka/


# --- CONFIGURAÇÃO JWT ---
# A chave secreta será lida de uma variável de ambiente chamada JWT_SECRET no Railway.
jwt.secret=${JWT_SECRET}

# --- LOGGING (Opcional, mas útil para depuração) ---
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE